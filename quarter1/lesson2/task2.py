# Урок 2. Задание 2-3.
# Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число кавычками и дополнить нулём до двух разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Новый список не создавать! Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
#
# Решение: Определение числа в списке.
# Берем элемент списка.
# Определяем знак "+" или "-" (если он есть) при помощи startswith() или el[0]
# Предполагаемую числовую часть получаем отбрасыванием первого символа: el[1:]
# Определяем вещественное число через поиск разделителя ("." или ",") с помощью методов el.find('.') и el.count('.')
# 1 способ: при этом также левая (целая) и правая (дробная) части должны быть целым числом.
# 2 способ: просто преобразовать строку во float
# Целое же число можно определить при помощи методов isdigit, isnumeric или isdecimal
#
#       Дата  Автор
# 2021.06.08  Кузнецов Денис

working_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# working_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '-5', 'градусов']
list_element = ''  # Объявим переменную вместо элемента цикла, чтобы можно было изменять "на ходу"
result_str = ''  # Результирующая строка (можно заполнить в конце из списка, можно заполнять "по ходу")
# буду заполнять "по ходу", и сразу использовать для отладки

list_pos = 0  # установим указатель на эл-т списка на начало списка
# пока не дошли до конца списка, который может по ходу расти (поэтому while)
while list_pos < len(working_list):
    num_element = 0  # подготовим хранилище для числового эл-та
    signed_str = ''  # подготовим хранилище для работы со знаком

    list_element = working_list[list_pos]  # возьмем очередной эл-т
    # print(list_element)
    # обработаем +/- в начале эл-та списка
    if list_element.startswith('+'):  # если в начале эл-та списка "+"
        signed_str = list_element[1:]  # получим строку без первого символа
        list_element = signed_str  # запомним её как эл-т списка
        signed_str = '+'  # и запомним знак
    elif list_element.startswith('-'):  # иначе, если в начале эл-та списка "-"
        signed_str = list_element[1:]  # получим строку без первого символа
        list_element = signed_str  # запомним её как эл-т списка
        signed_str = '-'  # и запомним знак

    # с помощью методов el.find(',') и el.count(',') можно определить float или нет и обработать
    # для простоты будем считать что числа целые
    if list_element.isnumeric():  # если эл-т списка число (со знаком или без)
        num_element = int(list_element)
        working_list.insert(list_pos, '"')  # вставим слева от числа кавычки

        result_str = f'{result_str} {working_list[list_pos]}'  # добавим к строке результата пробел и открыв. кавычки
        list_pos += 1  # увеличим позицию в списке (вернулись на своё число)

        if len(signed_str) > 0:  # если число имело знак и мы его "откусили"
            list_element = signed_str + f'{num_element:02d}'  # восстановим элемент, преобразовав его до 2-х знакового
        else:  # если число не имело знака, просто преобразуем его до 2-х знакового
            list_element = f'{num_element:02d}'
        working_list[list_pos] = list_element  # обновим числовой элемент списка перед добавлением завершающей кавычки

        result_str = f'{result_str}{working_list[list_pos]}'  # добавим к строке результата число, без пробелов

        if list_pos < len(working_list):  # если мы еще не дошли до последнего эл-та
            list_pos += 1  # увеличим позицию в списке (встали на следующий эл-т справа)
            working_list.insert(list_pos, '"')  # вставим слева от этого эл-та, т.е. справа от числа кавычки
        else:  # если мы дошли до последнего эл-та
            working_list.append('"')  # увеличим список, добавив справа от числа кавычки

        result_str = f'{result_str}{working_list[list_pos]}'  # добавим к строке результата закр. кавычки, без пробелов
    else:  # иначе (если элемент не число)
        if len(signed_str) > 0:  # если элемент начинался со знаков +/-
            list_element = signed_str + list_element  # восстановим элемент, вернув знак
            working_list[list_pos] = list_element  # обновим нечисловой элемент списка
        result_str = f'{result_str} {working_list[list_pos]}'  # добавим к строке результата пробел и элемент

    list_pos += 1

print(working_list)
print(result_str)

