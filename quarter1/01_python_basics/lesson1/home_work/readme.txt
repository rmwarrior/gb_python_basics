# Домашнее задание для урока 1 первой четверти

task1.py

# Урок 1. Задание 1.
# Реализовать вывод информации о промежутке времени в зависимости от его продолжительности duration в секундах:
# до минуты: <s> сек;
# * до часа: <m> мин <s> сек;
# * до суток: <h> час <m> мин <s> сек;
# * *до месяца, до года, больше года: по аналогии.
#
# Решение: Программа ожидает ввода целого числа больше 0
# Если введено не число, то выдает сообщение об ошибке и снова ожидает ввода
# Если введен 0, программа сообщает, что 'Интервал равен нулю'
# Ограничился точностью до дней (при вводе числа 35000000, получим 405 дн. 2 час. 13 мин. 20 сек.)
# или 405 days, 2 hours, 13 minutes and 20 seconds. как на https://www.epochconverter.com/


task1_list.py

# То же задание, но с упрощенной реализацией со списками
# Решение: Программа имеет список значений промежутков времени
# В цикле заполняет набор дополнительных списков, промежуточными вычислениями
# Ограничился точностью до дней (при вводе числа 35000000, получим 405 дн. 2 час. 13 мин. 20 сек.)
# или 405 days, 2 hours, 13 minutes and 20 seconds. как на https://www.epochconverter.com/


task2.py

# Урок 1. Задание 2.
# Создать список, состоящий из кубов нечётных чисел от 0 до 1000:
# a. Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
# Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
# Внимание: использовать только арифметические операции!
# b. К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
# сумма цифр которых делится нацело на 7. Внимание: новый список не создавать!!!
#
# Решение: Программа вычисляет кубы и сохраняет в список.
# Затем делает два прохода по списку: первый раз для пункта "a" задачи, второй - для пункта "b" или "c"
# При первом проходе берём сохранённое значение куба из списка, считаем сумму цифр, и если она делится на 7 складываем
# в переменную. После прохода по списку, выводим полученную сумму.
# При втором проходе берём сохранённое значение куба из списка, увеличиваем его значение на 17, считаем сумму цифр,
# и если она делится на 7 складываем в переменную. После прохода по списку, выводим полученную сумму.


task3.py

# Урок 1. Задание 3.
# Реализовать склонение слова «процент» для чисел до 20.
# Например, задаем число 5 — получаем «5 процентов», задаем число 2 — получаем «2 процента».
# Вывести все склонения для проверки.
#
# Решение: Найдем все возможные варианты окончаний и запишем в список.
# Можно было бы использовать перекодировщик "percent_codes", но в нем нет смысла,
# так как окончания хорошо укладываются в 3 диапазона.
# Дальше - дело техники, в зависимости от значения подбираем нужное окончание.
# Программа запрашивает значение от 1 до 20, выводит результат, а затем выводит все значения от 1 до 20

